# See http://www.appveyor.com/docs/appveyor-yml

version: '{build}'

branches:
  except:
  - /^travis.*$/

clone_depth: 5

cache:
- x86_64-7.3.0-release-win32-seh-rt_v5-rev0.7z

# https://www.appveyor.com/docs/build-environment/#build-worker-images
image: Visual Studio 2017

environment:
  CTEST_OUTPUT_ON_FAILURE: 1
  matrix:
  - MINGW_DIR: mingw64
    MINGW_URL: https://downloads.sourceforge.net/project/mingw-w64/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/7.3.0/threads-posix/seh/x86_64-7.3.0-release-posix-seh-rt_v5-rev0.7z
    MINGW_ARCHIVE: x86_64-7.3.0-release-posix-seh-rt_v5-rev0.7z
    WINDBG_DIR: '%ProgramFiles(x86)%\Windows Kits\10\Debuggers\x64'

install:
- git submodule update --init --recursive
- set Path=C:\Python36;%Path%
- echo %Path%
- if not exist "%MINGW_ARCHIVE%" appveyor DownloadFile "%MINGW_URL%" -FileName "%MINGW_ARCHIVE%"
- 7z x -y "%MINGW_ARCHIVE%" > nul
# CMake refuses to generate MinGW Makefiles if sh.exe is in the Path
# - ps: Get-Command sh.exe -All | Remove-Item
- set Path=%CD%\%MINGW_DIR%\bin;%Path%
- set Path=%Path:C:\Program Files\Git\usr\bin;=%
- set HUNTER_GIT_EXECUTABLE=C:/Program Files/Git/bin/git.exe
- set MINGW_FULL_DIR=%CD%\%MINGW_DIR%
- dir %MINGW_FULL_DIR%

before_build:
- g++ --version
- mingw32-make --version
- cmake --version
- dir %MINGW_DIR%
- dir %MINGW_DIR%\opt
- echo NUMBER_OF_PROCESSORS=%NUMBER_OF_PROCESSORS%
- ps: (Get-Item "${Env:WINDBG_DIR}\dbghelp.dll").VersionInfo
- mkdir build
- cd build
- cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release -DBUILD_TEST=ON -DCMAKE_INSTALL_PREFIX="..\stage" -DCMAKE_PREFIX_PATH="%MINGW_FULL_DIR%\opt"

build_script:
- cmake --build . --target install

after_build:
- set Path=%WINDBG_DIR%;%Path%
- ctest -VV